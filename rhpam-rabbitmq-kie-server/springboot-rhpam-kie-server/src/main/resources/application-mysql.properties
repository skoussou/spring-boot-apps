#server configuration
server.address=0.0.0.0
server.port=8090

cxf.path=/rest
cxf.jaxrs.classes-scan=true
#cxf.jaxrs.classes-scan-packages=
# Problem with the following as no SWAGGER APIs
cxf.jaxrs.classes-scan-packages=com.redhat

#kie server capabilities
kieserver.drools.enabled=true
kieserver.jbpm.enabled=true
kieserver.dmn.enabled=false
kieserver.jbpmui.enabled=true
kieserver.casemgmt.enabled=false

#jbpm configuration
jbpm.executor.enabled=true
jbpm.executor.retries=5
jbpm.executor.interval=10
jbpm.executor.threadPoolSize=1
jbpm.executor.timeUnit=SECONDS

#data source configuration
spring.datasource.username=jbpm
spring.datasource.password=jbpm
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/jbpm
spring.datasource.driver-class-name=com.mysql.jdbc.jdbc2.optional.MysqlXADataSource

#hibernate configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#transaction manager configuration
narayana.dbcp.enabled=true
narayana.dbcp.maxTotal=20
spring.jta.narayana.transaction-manager-id=1

kieserver.swagger.enabled=true


###########################################
#                                         #
# Application (non RHPAM) Required confgs #
#                                         #
###########################################


# Security of the APP API (if not keycloak or other authentication/authorization method available)
# oc create secret generic kie-api-credentials --from-literal=kie-api-svc-user=admin --from-literal=kie-api-svc-password='hapoalim!123'
# use same as RHPAM Controller(Business-Central, Kie Controller, RHPAM Monitor in order to "view" the processes stats)
kie.api.username=${SB_APP_API_USERNAME:pamAdmin}
kie.api.password=${SB_APP_API_PASSWORD:pamAdmin}
kie.module.gav=${SB_KIE_MODULE_GAV:com.redhat:payments:4.7.0}

# RabbitMQ properties (Used by spring to auto-create the RabbitMQ Template client)
# Relying on RabbitMQ running either locally or OCP
# OCP Scenario need to portforward (oc port-forward rabbitmq-0 5672:5672)
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:127.0.0.1}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:pamservice}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:pamservice}
